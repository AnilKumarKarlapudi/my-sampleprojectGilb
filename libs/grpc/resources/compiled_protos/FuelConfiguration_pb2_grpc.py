# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import libs.grpc.resources.compiled_protos.FuelConfiguration_pb2 as FuelConfiguration__pb2


class FuelConfigurationStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPumpProtocols = channel.unary_unary(
                '/FuelConfiguration/GetPumpProtocols',
                request_serializer=FuelConfiguration__pb2.GetPumpProtocolsRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetPumpProtocolsReply.FromString,
                )
        self.GetDispenserTypes = channel.unary_unary(
                '/FuelConfiguration/GetDispenserTypes',
                request_serializer=FuelConfiguration__pb2.GetDispenserTypesRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetDispenserTypesReply.FromString,
                )
        self.GetForecourtConfiguration = channel.unary_unary(
                '/FuelConfiguration/GetForecourtConfiguration',
                request_serializer=FuelConfiguration__pb2.GetForecourtConfigurationRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetForecourtConfigurationReply.FromString,
                )
        self.ValidateForecourtConfiguration = channel.unary_unary(
                '/FuelConfiguration/ValidateForecourtConfiguration',
                request_serializer=FuelConfiguration__pb2.ValidateForecourtConfigurationRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.ValidateForecourtConfigurationReply.FromString,
                )
        self.SetForecourtConfiguration = channel.unary_unary(
                '/FuelConfiguration/SetForecourtConfiguration',
                request_serializer=FuelConfiguration__pb2.SetForecourtConfigurationRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.SetForecourtConfigurationReply.FromString,
                )
        self.GetSiteConfiguration = channel.unary_unary(
                '/FuelConfiguration/GetSiteConfiguration',
                request_serializer=FuelConfiguration__pb2.GetSiteConfigurationRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetSiteConfigurationReply.FromString,
                )
        self.SetSiteConfiguration = channel.unary_unary(
                '/FuelConfiguration/SetSiteConfiguration',
                request_serializer=FuelConfiguration__pb2.SetSiteConfigurationRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.SetSiteConfigurationReply.FromString,
                )
        self.GetDispenserOptions = channel.unary_unary(
                '/FuelConfiguration/GetDispenserOptions',
                request_serializer=FuelConfiguration__pb2.GetDispenserOptionsRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetDispenserOptionsReply.FromString,
                )
        self.SetDispenserOptions = channel.unary_unary(
                '/FuelConfiguration/SetDispenserOptions',
                request_serializer=FuelConfiguration__pb2.SetDispenserOptionsRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.SetDispenserOptionsReply.FromString,
                )
        self.GetFuelGrades = channel.unary_unary(
                '/FuelConfiguration/GetFuelGrades',
                request_serializer=FuelConfiguration__pb2.GetFuelGradesRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetFuelGradesReply.FromString,
                )
        self.GetFuelPrices = channel.unary_unary(
                '/FuelConfiguration/GetFuelPrices',
                request_serializer=FuelConfiguration__pb2.GetFuelPricesRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetFuelPricesReply.FromString,
                )
        self.SetFuelPrices = channel.unary_unary(
                '/FuelConfiguration/SetFuelPrices',
                request_serializer=FuelConfiguration__pb2.SetFuelPricesRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.SetFuelPricesReply.FromString,
                )
        self.ActivateFuelPrices = channel.unary_unary(
                '/FuelConfiguration/ActivateFuelPrices',
                request_serializer=FuelConfiguration__pb2.ActivateFuelPricesRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.ActivateFuelPricesReply.FromString,
                )
        self.GetServiceLevels = channel.unary_unary(
                '/FuelConfiguration/GetServiceLevels',
                request_serializer=FuelConfiguration__pb2.GetServiceLevelsRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetServiceLevelsReply.FromString,
                )
        self.GetNetworkCodeConfiguration = channel.unary_unary(
                '/FuelConfiguration/GetNetworkCodeConfiguration',
                request_serializer=FuelConfiguration__pb2.GetNetworkCodeConfigurationRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetNetworkCodeConfigurationReply.FromString,
                )
        self.SetNetworkCodeConfiguration = channel.unary_unary(
                '/FuelConfiguration/SetNetworkCodeConfiguration',
                request_serializer=FuelConfiguration__pb2.SetNetworkCodeConfigurationRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.SetNetworkCodeConfigurationReply.FromString,
                )
        self.SetFixedGrades = channel.unary_unary(
                '/FuelConfiguration/SetFixedGrades',
                request_serializer=FuelConfiguration__pb2.SetFixedGradesRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.SetFixedGradesReply.FromString,
                )
        self.GetCrindCashAcceptor = channel.unary_unary(
                '/FuelConfiguration/GetCrindCashAcceptor',
                request_serializer=FuelConfiguration__pb2.GetCrindCashAcceptorRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.GetCrindCashAcceptorReply.FromString,
                )
        self.SetCrindCashAcceptor = channel.unary_unary(
                '/FuelConfiguration/SetCrindCashAcceptor',
                request_serializer=FuelConfiguration__pb2.SetCrindCashAcceptorRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.SetCrindCashAcceptorReply.FromString,
                )
        self.SetCrindReceiptConfiguration = channel.unary_unary(
                '/FuelConfiguration/SetCrindReceiptConfiguration',
                request_serializer=FuelConfiguration__pb2.SetCrindReceiptConfigurationRequest.SerializeToString,
                response_deserializer=FuelConfiguration__pb2.SetCrindReceiptConfigurationReply.FromString,
                )


class FuelConfigurationServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPumpProtocols(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDispenserTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetForecourtConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateForecourtConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetForecourtConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSiteConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSiteConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDispenserOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDispenserOptions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFuelGrades(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFuelPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFuelPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ActivateFuelPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceLevels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNetworkCodeConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetNetworkCodeConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetFixedGrades(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCrindCashAcceptor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCrindCashAcceptor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCrindReceiptConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FuelConfigurationServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPumpProtocols': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPumpProtocols,
                    request_deserializer=FuelConfiguration__pb2.GetPumpProtocolsRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetPumpProtocolsReply.SerializeToString,
            ),
            'GetDispenserTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDispenserTypes,
                    request_deserializer=FuelConfiguration__pb2.GetDispenserTypesRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetDispenserTypesReply.SerializeToString,
            ),
            'GetForecourtConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetForecourtConfiguration,
                    request_deserializer=FuelConfiguration__pb2.GetForecourtConfigurationRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetForecourtConfigurationReply.SerializeToString,
            ),
            'ValidateForecourtConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateForecourtConfiguration,
                    request_deserializer=FuelConfiguration__pb2.ValidateForecourtConfigurationRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.ValidateForecourtConfigurationReply.SerializeToString,
            ),
            'SetForecourtConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.SetForecourtConfiguration,
                    request_deserializer=FuelConfiguration__pb2.SetForecourtConfigurationRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.SetForecourtConfigurationReply.SerializeToString,
            ),
            'GetSiteConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSiteConfiguration,
                    request_deserializer=FuelConfiguration__pb2.GetSiteConfigurationRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetSiteConfigurationReply.SerializeToString,
            ),
            'SetSiteConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSiteConfiguration,
                    request_deserializer=FuelConfiguration__pb2.SetSiteConfigurationRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.SetSiteConfigurationReply.SerializeToString,
            ),
            'GetDispenserOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDispenserOptions,
                    request_deserializer=FuelConfiguration__pb2.GetDispenserOptionsRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetDispenserOptionsReply.SerializeToString,
            ),
            'SetDispenserOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDispenserOptions,
                    request_deserializer=FuelConfiguration__pb2.SetDispenserOptionsRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.SetDispenserOptionsReply.SerializeToString,
            ),
            'GetFuelGrades': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFuelGrades,
                    request_deserializer=FuelConfiguration__pb2.GetFuelGradesRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetFuelGradesReply.SerializeToString,
            ),
            'GetFuelPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFuelPrices,
                    request_deserializer=FuelConfiguration__pb2.GetFuelPricesRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetFuelPricesReply.SerializeToString,
            ),
            'SetFuelPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFuelPrices,
                    request_deserializer=FuelConfiguration__pb2.SetFuelPricesRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.SetFuelPricesReply.SerializeToString,
            ),
            'ActivateFuelPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.ActivateFuelPrices,
                    request_deserializer=FuelConfiguration__pb2.ActivateFuelPricesRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.ActivateFuelPricesReply.SerializeToString,
            ),
            'GetServiceLevels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceLevels,
                    request_deserializer=FuelConfiguration__pb2.GetServiceLevelsRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetServiceLevelsReply.SerializeToString,
            ),
            'GetNetworkCodeConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNetworkCodeConfiguration,
                    request_deserializer=FuelConfiguration__pb2.GetNetworkCodeConfigurationRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetNetworkCodeConfigurationReply.SerializeToString,
            ),
            'SetNetworkCodeConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.SetNetworkCodeConfiguration,
                    request_deserializer=FuelConfiguration__pb2.SetNetworkCodeConfigurationRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.SetNetworkCodeConfigurationReply.SerializeToString,
            ),
            'SetFixedGrades': grpc.unary_unary_rpc_method_handler(
                    servicer.SetFixedGrades,
                    request_deserializer=FuelConfiguration__pb2.SetFixedGradesRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.SetFixedGradesReply.SerializeToString,
            ),
            'GetCrindCashAcceptor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCrindCashAcceptor,
                    request_deserializer=FuelConfiguration__pb2.GetCrindCashAcceptorRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.GetCrindCashAcceptorReply.SerializeToString,
            ),
            'SetCrindCashAcceptor': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCrindCashAcceptor,
                    request_deserializer=FuelConfiguration__pb2.SetCrindCashAcceptorRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.SetCrindCashAcceptorReply.SerializeToString,
            ),
            'SetCrindReceiptConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCrindReceiptConfiguration,
                    request_deserializer=FuelConfiguration__pb2.SetCrindReceiptConfigurationRequest.FromString,
                    response_serializer=FuelConfiguration__pb2.SetCrindReceiptConfigurationReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FuelConfiguration', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FuelConfiguration(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPumpProtocols(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetPumpProtocols',
            FuelConfiguration__pb2.GetPumpProtocolsRequest.SerializeToString,
            FuelConfiguration__pb2.GetPumpProtocolsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDispenserTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetDispenserTypes',
            FuelConfiguration__pb2.GetDispenserTypesRequest.SerializeToString,
            FuelConfiguration__pb2.GetDispenserTypesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetForecourtConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetForecourtConfiguration',
            FuelConfiguration__pb2.GetForecourtConfigurationRequest.SerializeToString,
            FuelConfiguration__pb2.GetForecourtConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateForecourtConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/ValidateForecourtConfiguration',
            FuelConfiguration__pb2.ValidateForecourtConfigurationRequest.SerializeToString,
            FuelConfiguration__pb2.ValidateForecourtConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetForecourtConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/SetForecourtConfiguration',
            FuelConfiguration__pb2.SetForecourtConfigurationRequest.SerializeToString,
            FuelConfiguration__pb2.SetForecourtConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSiteConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetSiteConfiguration',
            FuelConfiguration__pb2.GetSiteConfigurationRequest.SerializeToString,
            FuelConfiguration__pb2.GetSiteConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetSiteConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/SetSiteConfiguration',
            FuelConfiguration__pb2.SetSiteConfigurationRequest.SerializeToString,
            FuelConfiguration__pb2.SetSiteConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDispenserOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetDispenserOptions',
            FuelConfiguration__pb2.GetDispenserOptionsRequest.SerializeToString,
            FuelConfiguration__pb2.GetDispenserOptionsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDispenserOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/SetDispenserOptions',
            FuelConfiguration__pb2.SetDispenserOptionsRequest.SerializeToString,
            FuelConfiguration__pb2.SetDispenserOptionsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFuelGrades(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetFuelGrades',
            FuelConfiguration__pb2.GetFuelGradesRequest.SerializeToString,
            FuelConfiguration__pb2.GetFuelGradesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFuelPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetFuelPrices',
            FuelConfiguration__pb2.GetFuelPricesRequest.SerializeToString,
            FuelConfiguration__pb2.GetFuelPricesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFuelPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/SetFuelPrices',
            FuelConfiguration__pb2.SetFuelPricesRequest.SerializeToString,
            FuelConfiguration__pb2.SetFuelPricesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ActivateFuelPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/ActivateFuelPrices',
            FuelConfiguration__pb2.ActivateFuelPricesRequest.SerializeToString,
            FuelConfiguration__pb2.ActivateFuelPricesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceLevels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetServiceLevels',
            FuelConfiguration__pb2.GetServiceLevelsRequest.SerializeToString,
            FuelConfiguration__pb2.GetServiceLevelsReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNetworkCodeConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetNetworkCodeConfiguration',
            FuelConfiguration__pb2.GetNetworkCodeConfigurationRequest.SerializeToString,
            FuelConfiguration__pb2.GetNetworkCodeConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetNetworkCodeConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/SetNetworkCodeConfiguration',
            FuelConfiguration__pb2.SetNetworkCodeConfigurationRequest.SerializeToString,
            FuelConfiguration__pb2.SetNetworkCodeConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetFixedGrades(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/SetFixedGrades',
            FuelConfiguration__pb2.SetFixedGradesRequest.SerializeToString,
            FuelConfiguration__pb2.SetFixedGradesReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCrindCashAcceptor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/GetCrindCashAcceptor',
            FuelConfiguration__pb2.GetCrindCashAcceptorRequest.SerializeToString,
            FuelConfiguration__pb2.GetCrindCashAcceptorReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCrindCashAcceptor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/SetCrindCashAcceptor',
            FuelConfiguration__pb2.SetCrindCashAcceptorRequest.SerializeToString,
            FuelConfiguration__pb2.SetCrindCashAcceptorReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCrindReceiptConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FuelConfiguration/SetCrindReceiptConfiguration',
            FuelConfiguration__pb2.SetCrindReceiptConfigurationRequest.SerializeToString,
            FuelConfiguration__pb2.SetCrindReceiptConfigurationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
