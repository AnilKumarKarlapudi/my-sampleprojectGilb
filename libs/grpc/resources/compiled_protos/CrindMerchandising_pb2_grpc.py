# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import libs.grpc.resources.compiled_protos.CrindMerchandising_pb2 as CrindMerchandising__pb2


class CrindMerchandisingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCrindMerchandise = channel.unary_unary(
            "/CrindMerchandisingService/GetCrindMerchandise",
            request_serializer=CrindMerchandising__pb2.GetCrindMerchandiseRequest.SerializeToString,
            response_deserializer=CrindMerchandising__pb2.GetCrindMerchandiseReply.FromString,
        )
        self.SetCrindMerchandise = channel.unary_unary(
            "/CrindMerchandisingService/SetCrindMerchandise",
            request_serializer=CrindMerchandising__pb2.SetCrindMerchandiseRequest.SerializeToString,
            response_deserializer=CrindMerchandising__pb2.SetCrindMerchandiseReply.FromString,
        )
        self.SetCrindMerchandisingEnabled = channel.unary_unary(
            "/CrindMerchandisingService/SetCrindMerchandisingEnabled",
            request_serializer=CrindMerchandising__pb2.SetCrindMerchandisingEnabledRequest.SerializeToString,
            response_deserializer=CrindMerchandising__pb2.SetCrindMerchandisingEnabledReply.FromString,
        )


class CrindMerchandisingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCrindMerchandise(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SetCrindMerchandise(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def SetCrindMerchandisingEnabled(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_CrindMerchandisingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "GetCrindMerchandise": grpc.unary_unary_rpc_method_handler(
            servicer.GetCrindMerchandise,
            request_deserializer=CrindMerchandising__pb2.GetCrindMerchandiseRequest.FromString,
            response_serializer=CrindMerchandising__pb2.GetCrindMerchandiseReply.SerializeToString,
        ),
        "SetCrindMerchandise": grpc.unary_unary_rpc_method_handler(
            servicer.SetCrindMerchandise,
            request_deserializer=CrindMerchandising__pb2.SetCrindMerchandiseRequest.FromString,
            response_serializer=CrindMerchandising__pb2.SetCrindMerchandiseReply.SerializeToString,
        ),
        "SetCrindMerchandisingEnabled": grpc.unary_unary_rpc_method_handler(
            servicer.SetCrindMerchandisingEnabled,
            request_deserializer=CrindMerchandising__pb2.SetCrindMerchandisingEnabledRequest.FromString,
            response_serializer=CrindMerchandising__pb2.SetCrindMerchandisingEnabledReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("CrindMerchandisingService", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class CrindMerchandisingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCrindMerchandise(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/CrindMerchandisingService/GetCrindMerchandise",
            CrindMerchandising__pb2.GetCrindMerchandiseRequest.SerializeToString,
            CrindMerchandising__pb2.GetCrindMerchandiseReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SetCrindMerchandise(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/CrindMerchandisingService/SetCrindMerchandise",
            CrindMerchandising__pb2.SetCrindMerchandiseRequest.SerializeToString,
            CrindMerchandising__pb2.SetCrindMerchandiseReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def SetCrindMerchandisingEnabled(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/CrindMerchandisingService/SetCrindMerchandisingEnabled",
            CrindMerchandising__pb2.SetCrindMerchandisingEnabledRequest.SerializeToString,
            CrindMerchandising__pb2.SetCrindMerchandisingEnabledReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
